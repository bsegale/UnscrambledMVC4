@model Unscrambled.Domain.Game
@using Unscrambled.Areas.Coordinator.ViewHelpers


          
<form class="game-details-form" action="/Coordinator/Game/Create" method="post" name="create_game" onsubmit="return ValidateGameDetails()" />
@Html.Hidden("CoordinatorID", Model.CoordinatorID)
<ul>
    <li>
         <h2>Set Game Details</h2>
         <span class="required_notification">* Denotes Required Field</span>
    </li>
    <li>
        @Html.LabelFor(model => model.Name, "Game Name")
        <input type="text" id="Name" name="Name" placeholder="Enter Game Name" value="@Model.Name" onchange="CheckGameName(this)" />
         <span id="nameDivStr" class="input_hint_hidden" >Characters and numbers only please.</span>
    </li>
    <li>
        <label for="email">Number Of Players/Teams:</label>
        <input type="text" id=NumberOfPlayers name="NumberOfPlayersOrTeams" placeholder="Enter Number" value="@Model.NumberOfPlayersOrTeams" onchange="CheckNumberOfPlayers(this)" />
        <span id="numberOfPlayersDivStr" class="input_hint_hidden">Must between 1 - 120"</span>
    </li>
    <li>
        <label for="GameTypeID">Game Type:</label>
        @Html.DropDownListFor(model => model.GameTypeID, new SelectList(ViewBag.GameTypes, "Value", "Text", Model == null ? 0 : Model.GameTypeID), new { onchange="CheckGameType(this)" })
        <span id="gameTypeDivStr" class="input_hint_hidden">Choose your game type</span>
    </li>
    <li>
        @Html.LabelFor(model => model.IsHandicapped, "Is Game Handicapped:")
        <select id="IsHandicapped" name="IsHandicapped" onchange="CheckIsHandicapped(this)">
        @MySelectHelper.CreateOptionsInSelectTag(ViewBag.IsHandicappedSelectItems, Model.IsHandicapped.ToString())
        </select>
        <span id="isHandicappedDivStr" class="input_hint_hidden" >You must select an item.</span>          
    </li>
    <li>
        <label for="NumberOfRounds">Number of Rounds:</label>
        <select id="NumberOfRounds" name="NumberOfRounds">
        @MySelectHelper.CreateOptionsInSelectTag(ViewBag.NumRounds, Model.NumberOfRounds.ToString())
        </select>
        <span id="numberOfRoundsDivStr" class="input_hint_hidden"> How many rounds in your game?</span>
    </li>
    <li>
        <button id="GameSubmitButton" name="FormSubmit" class="submit" type="submit">Create Game</button>
    </li>
</ul>


</form>

